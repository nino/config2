# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# default: ZSH_THEME="robbyrussell"
ZSH_THEME="robbyrussell"

eval "$(direnv hook zsh)"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# plugins=(git github osx history ruby rvm brew vi-mode)
plugins=(git github macos history ruby brew wd vi-mode)

bindkey -v
source $ZSH/oh-my-zsh.sh

setopt extended_glob

PROMPT="$PROMPT$ "

# trash() {
#   mv $1 ~/.Trash/$1-$(date +%H%M%S)
# }


local_ip_address() {
  ipconfig getifaddr en0 || ipconfig getifaddr en7
}

# supposed to make the git prompt thing faster:
function git_prompt_info() {
  echo ""
}
# export DISABLE_AUTO_TITLE=true

alias l='ls -l -h'
alias ls='ls'
alias v='nvim'
alias vi='nvim'
alias vim='nvim'
alias vs='nvim -S ~/Prevsession.vim'
alias bb='bbedit'
alias tst='tig status'
alias vc='nvim -S `ls | grep .vim | fzf`'
alias ct='ctags -R .'
alias uuid='uuidgen | tr -d "\n" | pbcopy'
alias com="git add . && git commit -m"
alias awk='gawk'
alias dockre='docker'

if [ -f ~/.config/secret-config2/secret_zsh ]; then
  source ~/.config/secret-config2/secret_zsh
fi

alias tnm='tig --no-merges'

alias yran='yarn'
alias yanr='yarn'
alias ynar='yarn'
alias ynra='yarn'
alias ayrn='yarn'

alias zzr='source ~/.zshrc'

mcd() {
  mkdir $1 && cd $1
}



co() {
  local branch=`git lb | uniquelines | fzf`
  if [ -z "$1" ]; then
    gco $branch
  elif [ "$1" = "merge" ]; then
    eval "git merge \"$branch\""
  fi
  # local branch="$( git branch | sed s/\*/\ /g | awk '{ print $1 }' | fzf)"
  # if [ ! -z $branch ]; then
  #   if [ -z $1 ]; then
  #     git checkout "$branch"
  #   elif [ "$1" = "tig" ]; then
  #     eval "tig \"$branch\""
  #   else
  #     local command="git $1 \"$branch\""
  #     eval $command
  #   fi
  # fi
}


alias stash='git stash --include-untracked'
alias stpop='git stash pop'

try_invoke() {
  eval "$1 || $1 || $1"
}


# So you can press ctrl-s to save
# v() {
#     stty stop '' -ixoff; vim $*
# }
# this and stty stop '' -ixoff; make that ctrl is not intercepted by terminal
# `Frozing' tty, so after any command terminal settings will be restored
ttyctl -f

# recursive line count
countlines() {
    find . -name $1 | xargs wc -l
}

# fortune -s rationality

passgen(){
    [ $# -eq 0 ] && 1="16"
    tr -dc "[[:alnum:]!\"#$%&'()*+,./:;<=>?@\\_{|}~-]" < /dev/random |
    head -c $1; echo
}

matrix() {
  echo -e "\e[1;40m" ; clear ; while :; do echo $LINES $COLUMNS $(( $RANDOM % $COLUMNS)) $(( $RANDOM % 72 )) ;sleep 0.05; done|awk '{ letters="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*()"; c=$4; letter=substr(letters,c,1);a[$3]=0;for (x in a) {o=a[x];a[x]=a[x]+1; printf "\033[%s;%sH\033[2;32m%s",o,x,letter; printf "\033[%s;%sH\033[1;37m%s\033[0;0H",a[x],x,letter;if (a[x] >= $1) { a[x]=0; } }}'
}

export LIN='~/.config/nvim/lua/initialize.lua'
export THING='~/.config/nvim/colors/thing.lua'
export THINGLIGHT='~/.config/nvim/colors/thinglight.lua'
export PLAINDARK='~/.config/nvim/colors/plaindark.lua'
export SECRETZSH='~/.config/secret-config2/secret_zsh'
export KITTYCONF='~/.config/kitty/kitty.conf'

PERL_MB_OPT="--install_base \"/Users/Nino/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/Nino/perl5"; export PERL_MM_OPT;

# To fix the weird python utf8 problem
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket
export CMAKE_EXPORT_COMPILE_COMMANDS=true

# Set NVM dir if nvm is installed
if hash nvm 2>/dev/null; then
  NVM_DIR="/Users/Nino/.nvm"
  . "/usr/local/opt/nvm/nvm.sh"
fi

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

# Fuzzy Finder
export FZF_DEFAULT_COMMAND='fd --type f'

# Setting PATH for Python 3.6
# The original version is saved in .bash_profile.pysave
# export PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:~/Library/Python/3.6/bin:${PATH}"
# export PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"
# if [ -n "$(command -v pyenv)" ]; then # Only if pyenv command exists
#   eval "$(pyenv init -)"
# fi
#


export PATH="$HOME/.config/scripts:${PATH}"
export PATH="$HOME/.config/secret-config2/scripts:${PATH}"
export PATH="$HOME/.local/bin:${PATH}"
export TERM=screen-256color




[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/.secret_vars ] && source ~/.secret_vars


export PATH=$PATH:/home/nino/.cargo/bin
export PATH=$PATH:/Users/nino/.rustup/toolchains/stable-aarch64-apple-darwin/bin


# For rm-improved
export GRAVEYARD=~/.Trash

# https://github.com/keybase/keybase-issues/issues/2798
# export GPG_TTY=$(tty)
eval "$(~/.local/bin/mise activate zsh)"

export PATH=$PATH:/opt/homebrew/bin
