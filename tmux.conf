# for the system clipboard
# if-shell "uname | grep -q Darwin" "set-option -g default-command \"reattach-to-user-namespace -l zsh\"" ""

# set-option -g default-terminal "xterm-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB,tmux-256color:RGB'

# Prefix
unbind C-b
set-option -g prefix C-space
bind-key C-space send-prefix


# set-option -g default-command fish
# set -g default-terminal $TERM
set -g default-terminal 'tmux-256color'
# set -as terminal-overrides ',xterm*:sitm=\E[3m,ritm=\E[23m,'

# Showing the time and git branch in the bottom right:
set -g status-right '#(cd #{pane_current_path} && git rev-parse --abbrev-ref HEAD)|-#(date +"%H:%M")-'
set -g status-position bottom
set -g status-justify left

set -g history-limit 100000

# No delays when hitting escape
set -g escape-time 0

# Use vim keybindings in copy mode
# setw -g mode-keys vi
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X cancel

set -g mouse on
set -g focus-events on

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Setup 'v' to begin selection as in Vim
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# To make resizing work in macOS terminal
bind-key -r -T prefix       M-Up              resize-pane -U 5
bind-key -r -T prefix       M-Down            resize-pane -D 5
bind-key -r -T prefix       M-b               resize-pane -L 5
bind-key -r -T prefix       M-f               resize-pane -R 5

# Update default binding of `Enter` to also use copy-pipe
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Colors with full RGB support \o/
set-option -g status-style fg=#333333,bg=#D0D0D0
set-option -g window-status-style fg=#444444,bg=default
set-option -g window-status-current-style fg=#222288,bg=#ffffff
set-option -g pane-active-border-style fg=#4287f5
set-option -g pane-border-style fg=#aaaaaa

# set-option -g status-style default
# set-option -g window-status-style default
# set-option -g window-status-current-style default
# set-option -g pane-active-border-style default
# set-option -g pane-border-style default

# set-option -g pane-border-lines double

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Other mappings that may be fun
bind-key -T prefix t select-layout tiled

# easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window
bind C-l last-window
bind C-c new-window
bind @ join-pane

bind -n M-z resize-pane -Z
bind -n M-[ copy-mode

# New window with same dir
bind C-C new-window -c "#{pane_current_path}"

# Everything in same dir
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

set -g set-titles on
set -g set-titles-string '#T'
setw -g automatic-rename on
setw -g automatic-rename-format '#{b:pane_current_path}'
