# for the system clipboard
# if-shell "uname | grep -q Darwin" "set-option -g default-command \"reattach-to-user-namespace -l zsh\"" ""

# set-option -g default-terminal "xterm-256color"
# set-option -sa terminal-overrides ',tmux-256color:RGB'


# set -g default-terminal $TERM
set -g default-terminal 'screen-256color'
# set -as terminal-overrides ',xterm*:sitm=\E[3m,ritm=\E[23m,'

# Showing the time and git branch in the bottom right:
set -g status-right '#(date +"%H%M") #(cd #{pane_current_path} && git rev-parse --abbrev-ref HEAD)'
# set -g status-position bottom

set -g history-limit 100000

# No delays when hitting escape
set -g escape-time 0

# Use vim keybindings in copy mode
# setw -g mode-keys vi
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X cancel

set -g mouse on
set -g focus-events on

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Setup 'v' to begin selection as in Vim
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# To make resizing work in macOS terminal
bind-key -r -T prefix       M-Up              resize-pane -U 5
bind-key -r -T prefix       M-Down            resize-pane -D 5
bind-key -r -T prefix       M-b               resize-pane -L 5
bind-key -r -T prefix       M-f               resize-pane -R 5

# Update default binding of `Enter` to also use copy-pipe
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Colors \o/
# set-option status-bg default
# set-option status-fg white
# set-option window-status-current-style 'bg=white,fg=black'
# set-option status-current-bg white
# set-option status-current-fg black
set-option -g status-style fg=yellow,bg=blue
set-option -g window-status-style fg=yellow,bg=blue
set-option -g window-status-current-style fg=black,bg=white
set-option -g pane-active-border-style fg=blue
set-option -g pane-border-style fg=white
# set-option -g pane-border-lines double

# VIM-TMUX NAVIGATION <-- the best stuff
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

# bind-key -r -T prefix W  if-shell "$is_vim" "send-keys ':hide' enter" "send-keys C-d"

# Other mappings that may be fun
bind-key -T prefix t select-layout tiled

# easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window
bind C-l last-window
bind C-c new-window

bind -n M-z resize-pane -Z
bind -n M-[ copy-mode

# New window with same dir
bind C-C new-window -c "#{pane_current_path}"

# Everything in same dir
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

set -g set-titles on
set -g set-titles-string '#T'
setw -g automatic-rename on
setw -g automatic-rename-format '#{b:pane_current_path}'
